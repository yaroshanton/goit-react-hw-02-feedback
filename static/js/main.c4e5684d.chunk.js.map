{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/NotificationMessage.js","components/App.js","index.js"],"names":["Statistics","this","props","good","neutral","bad","total","positivePercentage","children","Component","Section","title","className","FeedbackOptions","onLeaveFeedback","value","onClick","Notification","message","App","state","incrimentFeedback","e","setState","prevState","target","countTotalFeedback","Object","values","reduce","a","b","countPositiveFeedbackPercentage","Math","round","visibleTotal","ReactDOM","render","document","querySelector"],"mappings":"mQAiCeA,E,uKAnBD,IAAD,EAC+DC,KAAKC,MAAjEC,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAAKC,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,mBAAoBC,EADlD,EACkDA,SAEvD,OACI,qCACI,4CACW,IAAVF,EAAcE,EACX,gCACI,uCAAUL,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,iB,GAtBCE,aCaVC,G,MAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOH,EAAV,EAAUA,SAAV,OACZ,0BAASI,UAAU,kBAAnB,UACI,6BAAKD,IACJH,OCOMK,EAZS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACpB,qCACI,wBAAQC,MAAM,OAAOC,QAASF,EAA9B,kBACA,wBAAQC,MAAM,UAAUC,QAASF,EAAjC,qBACA,wBAAQC,MAAM,MAAMC,QAASF,EAA7B,qBCKOG,EATM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,6BAAKA,KCEYC,E,4MACjBC,MAAQ,CACJjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGTgB,kBAAoB,SAACC,GACjB,EAAKC,UAAS,SAAAC,GACV,IAAMT,EAAQO,EAAEG,OAAOV,MACvB,OAAO,eACFA,EAAQS,EAAWT,GAAS,O,EAKzCW,mBAAqB,kBAAMC,OAAOC,OAAO,EAAKR,OAAOS,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,M,EAG1EC,gCAAkC,kBAAMC,KAAKC,MAAM,EAAKd,MAAMjB,KAAO,EAAKuB,qBAAuB,M,uDAGvF,IAAD,EAC0BzB,KAAKmB,MAA5BjB,EADH,EACGA,KAAMC,EADT,EACSA,QAASC,EADlB,EACkBA,IAEjB8B,EAAelC,KAAKyB,qBAE1B,OACI,eAAC,EAAD,CAASf,MAAM,wBAAf,UACI,cAAC,EAAD,CAAiBG,gBAAiBb,KAAKoB,oBACvC,cAAC,EAAD,CAAYlB,KAAMA,EAAMC,QAASA,EAASC,IAAKA,EAAKC,MAAO6B,EAAc5B,mBAAoBN,KAAK+B,kCAAlG,SACI,cAAC,EAAD,CAAcd,QAAQ,+B,GA/BTT,a,MCDjC2B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.c4e5684d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\n\nclass Statistics extends Component {\n    static propTypes = {\n        good: PropTypes.number.isRequired,\n        neutral: PropTypes.number.isRequired,\n        bad: PropTypes.number.isRequired,\n        total: PropTypes.number.isRequired,\n        positivePercentage: PropTypes.number.isRequired,\n        children: PropTypes.object.isRequired\n    }\n\n    render() {\n        const { good, neutral, bad, total, positivePercentage, children } = this.props;\n\n        return (\n            <>\n                <h2>Statistics</h2>\n                {total === 0 ? children :\n                    <div>\n                        <p>Good: {good}</p>\n                        <p>Neutral: {neutral}</p>\n                        <p>Bad: {bad}</p>\n                        <p>Total: {total}</p>\n                        <p>Positive feedback: {positivePercentage}%</p>\n                    </div>}\n            </>\n        )\n    }\n}\n\nexport default Statistics;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './Section.css'\n\n\nconst Section = ({ title, children }) => (\n    <section className=\"feedbackSection\">\n        <h2>{title}</h2>\n        {children}\n    </section>\n)\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.array.isRequired\n}\n\nexport default Section;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\n    <>\n        <button value=\"good\" onClick={onLeaveFeedback}>Good</button>\n        <button value=\"neutral\" onClick={onLeaveFeedback}>Neutral</button>\n        <button value=\"bad\" onClick={onLeaveFeedback}>Bad</button>\n    </>\n)\n\nFeedbackOptions.propTypes = {\n    onLeaveFeedback: PropTypes.func\n}\n\nexport default FeedbackOptions;","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Notification = ({ message }) => (\n    <h4>{message}</h4>\n)\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\n\nexport default Notification;","import React, { Component } from 'react';\nimport Statistics from './Statistics/Statistics'\nimport Section from './Section/Section'\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions'\nimport Notification from './Notification/NotificationMessage';\n\nexport default class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0\n    }\n\n    incrimentFeedback = (e) => {\n        this.setState(prevState => {\n            const value = e.target.value;\n            return {\n                [value]: prevState.[value] + 1\n            };\n        })\n    };\n\n    countTotalFeedback = () => Object.values(this.state).reduce((a, b) => a + b);\n\n\n    countPositiveFeedbackPercentage = () => Math.round(this.state.good / this.countTotalFeedback() * 100);\n\n\n    render() {\n        const { good, neutral, bad } = this.state;\n\n        const visibleTotal = this.countTotalFeedback();\n\n        return (\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions onLeaveFeedback={this.incrimentFeedback} />\n                <Statistics good={good} neutral={neutral} bad={bad} total={visibleTotal} positivePercentage={this.countPositiveFeedbackPercentage()}>\n                    <Notification message=\"No feedback given\" />\n                </Statistics>\n            </Section>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './base.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}